<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

// require_once 'vendor/autoload.php';
// use Milo\Github;
require_once plugin_dir_path( __FILE__ ) . 'repos.php';
 

class WPSwiftPlugins {
	private $wp_swift_plugins_options;
	private $plugin_name = 'wp-swift-plugins';
	// private $plugin_dir = plugin_dir_url(dirname(__FILE__));

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'wp_swift_plugins_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'wp_swift_plugins_page_init' ) );
		add_action( 'admin_init', array( $this, 'enqueue_styles' ) );
		add_action( 'admin_init', array( $this, 'enqueue_scripts' ) );
	}

	/**
	 * Register the stylesheets for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_styles() {

		$css_version = filemtime( plugin_dir_path( __FILE__ ) . 'admin/css/wp-swift-plugins.css' );	
		wp_enqueue_style( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'admin/css/wp-swift-plugins.css', array(), $css_version, 'all' );

	}

	/**
	 * Register the JavaScript for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_scripts() {

		$js_version = filemtime( plugin_dir_path( __FILE__ ) . 'admin/js/wp-swift-plugins.js' );
		echo wp_enqueue_script( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'admin/js/wp-swift-plugins.js', array( 'jquery' ), $js_version, false );

	}	

	public function wp_swift_plugins_add_plugin_page() {
		$icon = 'admin/images/icon.png';//plugin_dir_path( __FILE__ ) . 
		add_menu_page(
			'WP Swift Plugins', // page_title
			'WP Swift', // menu_title
			'manage_options', // capability
			'wp-swift-plugins', // menu_slug
			array( $this, 'wp_swift_plugins_create_admin_page' ), // function
			plugins_url( $icon, __FILE__ ),//'dashicons-admin-generic', // icon_url
			100 // Position range of 5-100
		);
		// add_submenu_page( 
		// 	'plugins.php',
		// 	'WP Swift Plugins', // page_title
		// 	'WP Swift', // menu_title
		// 	'manage_options', 
		// 	'wp-swift-plugins',
		// 	array( $this, 'wp_swift_plugins_create_admin_page' ) // function
		// );
	}

	public function wp_swift_plugins_page_init() {
		register_setting(
			'wp_swift_plugins_option_group', // option_group
			'wp_swift_plugins_option_name', // option_name
			array( $this, 'wp_swift_plugins_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'wp_swift_plugins_setting_section', // id
			'Settings', // title
			array( $this, 'wp_swift_plugins_section_info' ), // callback
			'wp-swift-plugins-admin' // page
		);

		add_settings_field(
			'input_0', // id
			'Input', // title
			array( $this, 'input_0_callback' ), // callback
			'wp-swift-plugins-admin', // page
			'wp_swift_plugins_setting_section' // section
		);
	}

	public function wp_swift_plugins_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['input_0'] ) ) {
			$sanitary_values['input_0'] = sanitize_text_field( $input['input_0'] );
		}

		return $sanitary_values;
	}

	public function wp_swift_plugins_section_info() {
		
	}

	public function input_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="wp_swift_plugins_option_name[input_0]" id="input_0" value="%s">',
			isset( $this->wp_swift_plugins_options['input_0'] ) ? esc_attr( $this->wp_swift_plugins_options['input_0']) : ''
		);
	}

	private function download_plugin($dir) {
		$repos = wp_swift_get_repos();
		// Filenames
		$plugin_location = plugin_dir_path(dirname(__FILE__));
		$url = 'http://github.com/wp-swift-wordpress-plugins/'.$dir.'/zipball/master/';
		// $dir = "wp-swift-acf-starter-widget";
		$zip_dir_filename = $plugin_location.$dir.".zip";

		// Download file
		file_put_contents($zip_dir_filename, file_get_contents($url));
		
		// Create a zip object
		$zip = new ZipArchive();
		$res = $zip->open($zip_dir_filename);

		// Handle zip
		if ($res === TRUE) {
			// Get name of directort inside zip
			$temp_dir_name = $zip->getNameIndex(0);
			// Extract zip
			$zip->extractTo($plugin_location);
			$zip->close();
			// Rename directory
			rename($plugin_location.$temp_dir_name, $plugin_location.$dir);
			// Delete zip
			unlink($zip_dir_filename);

			// $plugin_path = $plugin_location.'wp-swift-acf-starter-widget/'.'_wp-swift-widget.php';
			// $result = activate_plugin( $plugin_path );
			// if ( is_wp_error( $result ) ) {
			// 	echo "<pre>"; var_dump($result); echo "</pre>";
			// }
			// else {
			// 	echo "<pre>activate_plugin</pre>";
			// }
			return true;
		} else {
			// echo 'Oops, that didn\'t work...';
			return false;
		}
		return false;		
	}

	public function get_content_from_github($url) {
		$ch = curl_init();
		curl_setopt($ch,CURLOPT_URL,$url);
		curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); 
		curl_setopt($ch,CURLOPT_CONNECTTIMEOUT,1);
		$content = curl_exec($ch);
		curl_close($ch);
		return $content;
	}

	public function wp_swift_plugins_create_admin_page() {
		// $this->wp_swift_plugins_options = get_option( 'wp_swift_plugins_option_name' ); 
		// $plugin_installed = false;
		$repos = wp_swift_get_repos();
		$action = admin_url( 'admin.php?page=wp-swift-plugins' );
		$plugin_dir = plugin_dir_path(dirname(__FILE__));

		if (isset($_POST["wp-swift-git-repo"])) {
			foreach ($_POST["wp-swift-git-repo"] as $key => $repo) {
				$this->download_plugin( $repo );
			}
		}
		?>

		<div class="wrap">
			<h2>WP Swift Plugins</h2>
			<p>All of the pluins listed below are available on github at the <a href="https://github.com/wp-swift-wordpress-plugins" target="_blank">WP Swift WordPress Plugins</a> account.</p>

<?php add_thickbox(); ?>
<div id="my-content-id" style="display:none;">
     <p>
          This is my hidden content! It will appear in ThickBox when the link is clicked.
     </p>
</div>

<a href="#TB_inline?width=600&height=550&inlineId=my-content-id" class="thickbox">View my inline content!</a>	

			<div id="count-repos"><?php echo count($repos) ?> Items</div>

			<form method="post" name="wp-swift-git-repo-form" id="wp-swift-git-repo-form" action="<?php echo $action; ?>">
				<table class="wp-swift-plugins">

					<thead>
						<tr>
							<th class="checkbox"><input type="checkbox" id="wp-swift-plugins-select-all"></th>
							<th class="plugin">Plugin</th>
							<th class="description">Description</th>
						</tr>			
					</thead>

					<tbody>

					<?php foreach ($repos as $key => $repo): ?>
						<?php $installed = file_exists( $plugin_dir.$key); 
						 ?>

						<tr class="<?php echo $installed ? 'installed':'not-installed'; ?>">
							<td class="checkbox">
								<?php if ( !$installed ): ?>
									<input type="checkbox" name="wp-swift-git-repo[]" value="<?php echo $key ?>" class="wp-swift-git-repo-checkbox">
								<?php else: ?>
									<input type="checkbox" disabled>
								<?php endif ?>
							</td>
							<td class="plugin"><?php echo $repo["title"] ?>
								<?php if ($installed): ?>
									<br>
									<small class="installed">Installed</small>
								<?php endif ?>
							</td>
							<td class="description"><?php echo $repo["description"] ?>
								<br>
								<span class="by">By </span><a href="#">Gary Swift</a> &#x7c; <a href="#">View Details</a>
							</td>
						</tr>
						
					 <?php endforeach ?>

				 	</tbody>
				</table>
			</form>

			<button type="submit" class="button button-primary" form="wp-swift-git-repo-form" value="Submit">Download Plugins</button>
			<p>Activate plugins on the <a href="<?php echo admin_url('plugins.php'); ?>">plugin page</a>.</p>

		</div>
	<?php }
}
require_once plugin_dir_path( __FILE__ ) . 'wpse10500.php';
if ( is_admin() )
	$wp_swift_plugins = new WPSwiftPlugins();

/* 
 * Retrieve this value with:
 * $wp_swift_plugins_options = get_option( 'wp_swift_plugins_option_name' ); // Array of All Options
 * $input_0 = $wp_swift_plugins_options['input_0']; // Input
 */
