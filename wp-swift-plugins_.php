<?php


# #Plugin Name__WP Swift: Plugins
# #Description__Description
# #Plugin URI__http://#
# #Author__Gary Swift
# #Author URI__https://github.com/wp-swift-wordpress-plugins
# #Version__1.0
# #License__GPL2
# #Text Domain__Text Domain
# #Domain Path__Domain Path


/*

    Copyright (C) Year  Author  Email

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License, version 2, as
    published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class WPSwiftPlugins {
	private $wp_swift_plugins_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'wp_swift_plugins_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'wp_swift_plugins_page_init' ) );
	}

	public function wp_swift_plugins_add_plugin_page() {
		add_menu_page(
			'WP Swift Plugins', // page_title
			'WP Swift Plugins', // menu_title
			'manage_options', // capability
			'wp-swift-plugins', // menu_slug
			array( $this, 'wp_swift_plugins_create_admin_page' ), // function
			'dashicons-admin-generic', // icon_url
			3 // position
		);
	}

	public function wp_swift_plugins_page_init() {
		register_setting(
			'wp_swift_plugins_option_group', // option_group
			'wp_swift_plugins_option_name', // option_name
			array( $this, 'wp_swift_plugins_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'wp_swift_plugins_setting_section', // id
			'Settings', // title
			array( $this, 'wp_swift_plugins_section_info' ), // callback
			'wp-swift-plugins-admin' // page
		);

		add_settings_field(
			'input_0', // id
			'Input', // title
			array( $this, 'input_0_callback' ), // callback
			'wp-swift-plugins-admin', // page
			'wp_swift_plugins_setting_section' // section
		);
	}

	public function wp_swift_plugins_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['input_0'] ) ) {
			$sanitary_values['input_0'] = sanitize_text_field( $input['input_0'] );
		}

		return $sanitary_values;
	}

	public function wp_swift_plugins_section_info() {
		
	}

	public function input_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="wp_swift_plugins_option_name[input_0]" id="input_0" value="%s">',
			isset( $this->wp_swift_plugins_options['input_0'] ) ? esc_attr( $this->wp_swift_plugins_options['input_0']) : ''
		);
	}

	private function download_plugin() {
		// Filenames
		$plugin_location = plugin_dir_path(dirname(__FILE__));
		$url = 'http://github.com/wp-swift-wordpress-plugins/wp-swift-acf-starter-widget/zipball/master/';
		$dir = "wp-swift-acf-starter-widget";
		$zip_dir_filename = $plugin_location.$dir.".zip";

		// Download file
		file_put_contents($zip_dir_filename, file_get_contents($url));
		
		// Create a zip object
		$zip = new ZipArchive();
		$res = $zip->open($zip_dir_filename);

		// Handle zip
		if ($res === TRUE) {
			// Get name of directort inside zip
			$temp_dir_name = $zip->getNameIndex(0);
			// Extract zip
			$zip->extractTo($plugin_location);
			$zip->close();
			// Rename directory
			rename($plugin_location.$temp_dir_name, $plugin_location.$dir);
			// Delete zip
			unlink($zip_dir_filename);

			$plugin_path = $plugin_location.'wp-swift-acf-starter-widget/'.'_wp-swift-widget.php';
			// activate_plugin(  );
			$result = activate_plugin( $plugin_path );
			if ( is_wp_error( $result ) ) {
				echo "<pre>"; var_dump($result); echo "</pre>";
			}
			else {
				echo "<pre>activate_plugin</pre>";
			}

		} else {
			echo 'Oops, that didn\'t work...';
		}		
	}

	public function get_content_from_github($url) {
		$ch = curl_init();
		curl_setopt($ch,CURLOPT_URL,$url);
		curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); 
		curl_setopt($ch,CURLOPT_CONNECTTIMEOUT,1);
		$content = curl_exec($ch);
		curl_close($ch);
		return $content;
	}

	public function wp_swift_plugins_create_admin_page() {
		$this->wp_swift_plugins_options = get_option( 'wp_swift_plugins_option_name' ); 



		?>

		<div class="wrap">
			<h2>WP Swift Plugins</h2>
			<p>WP Swift Plugins</p>
			<?php //settings_errors(); ?>

	<?php 
$ch = curl_init();
$source = 'https://api.github.com/wp-swift-wordpress-plugins';

		// curl_setopt($ch,CURLOPT_URL,$source);
		// curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); 
		// curl_setopt($ch,CURLOPT_CONNECTTIMEOUT,1);
		// $content = curl_exec($ch);
		// echo "<pre>"; var_dump($content); echo "</pre>";

$res = file_get_contents($source );
$res = json_decode($res);
print_r($res);
// curl_setopt($ch, CURLOPT_URL, $source);
// curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
// $data = curl_exec ($ch);
// echo "<pre>"; var_dump($ch); echo "</pre>";
// echo "<pre>"; var_dump($data); echo "</pre>";
curl_close ($ch);


		// $ch = curl_init();
		// curl_setopt($ch,CURLOPT_URL,$url);
		// curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); 
		// curl_setopt($ch,CURLOPT_CONNECTTIMEOUT,1);
		// $content = curl_exec($ch);
		// curl_close($ch);
// $plugin = 'Overlay';
// $cache_path = $_SERVER['DOCUMENT_ROOT'].'/plugin-cache/';
// $cache_file = $plugin.'-github.txt';
// $github_json = get_repo_json($cache_path.$cache_file,$plugin);

	/* 
			<form method="post" action="options.php">
					<?php
						settings_fields( 'wp_swift_plugins_option_group' );
						do_settings_sections( 'wp-swift-plugins-admin' );
						submit_button();
					?>
				</form> 
	*/ 
	?>
		</div>
	<?php }
}
if ( is_admin() )
	$wp_swift_plugins = new WPSwiftPlugins();

/* 
 * Retrieve this value with:
 * $wp_swift_plugins_options = get_option( 'wp_swift_plugins_option_name' ); // Array of All Options
 * $input_0 = $wp_swift_plugins_options['input_0']; // Input
 */
